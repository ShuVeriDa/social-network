{"version":3,"file":"static/js/128.e13420d8.chunk.js","mappings":"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","sources":["Components/Profile/Profile.module.css","Components/Profile/ProfileInfo/ProfileInfo.module.css","Components/Profile/ProfileInfo/ProfileStatusWithHooks.tsx","Components/Profile/ProfileInfo/ProfileInfo.tsx","webpack://patientway/./src/Components/Profile/MyPosts/MyPosts.module.css?bd90","webpack://patientway/./src/Components/Profile/MyPosts/Post/Post.module.css?54ab","Components/Profile/MyPosts/Post/Post.tsx","Components/Profile/MyPosts/MyPosts.tsx","Components/Profile/MyPosts/MyPostsContainer.tsx","Components/Profile/Profile.tsx","Components/Profile/ProfileContainer.tsx","hoc/withAuthRedirect.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {};","// extracted by mini-css-extract-plugin\nexport default {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__LQgdt\"};","import React, {ChangeEvent, FC, useEffect, useState} from 'react';\r\nimport classes from './ProfileInfo.module.css'\r\n\r\ntype ProfileStatusType = {\r\n   status: string\r\n   updateStatus: (status: string) => void\r\n}\r\n\r\nexport const ProfileStatusWithHooks: FC<ProfileStatusType> = ({ updateStatus, ...props}) => {\r\n   const [editMode, setEditMode] = useState<boolean>(false)\r\n   const [status, setStatus] = useState(props.status)\r\n\r\n   useEffect(() => {\r\n      setStatus(props.status)\r\n   }, [props.status])\r\n\r\n   const activateEditMode = () => {\r\n      setEditMode(true)\r\n   }\r\n\r\n   const deactivateEditMode = () => {\r\n      setEditMode(false)\r\n      updateStatus(status)\r\n   }\r\n\r\n   const onStatusChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n      setStatus(e.currentTarget.value)\r\n   }\r\n\r\n   return (\r\n      <div className={classes.profileInfo}>\r\n         {!editMode &&\r\n            <div>\r\n               <span onDoubleClick={activateEditMode}>{props.status || \"----\"}</span>\r\n            </div>\r\n         }\r\n         {editMode &&\r\n             <div>\r\n                 <input onBlur={deactivateEditMode} autoFocus={true} onChange={onStatusChange}/>\r\n             </div>\r\n         }\r\n      </div>\r\n   );\r\n}","import React from 'react';\r\nimport classes from './ProfileInfo.module.css'\r\nimport {Preloader} from \"../../common/Preloader/Preloader\";\r\nimport {ProfileStatusWithHooks} from \"./ProfileStatusWithHooks\";\r\n\r\ntype ProfileInfoType = {\r\n   profile: any\r\n   status: string\r\n   updateStatus: (status: string) => void\r\n}\r\n\r\nexport const ProfilelInfo = ({profile, status, updateStatus,...props}: ProfileInfoType) => {\r\n   if (!profile) {\r\n      return <Preloader />\r\n   }\r\n   return (\r\n      <div className={classes.profileInfo}>\r\n         <div>\r\n            <img src={profile.photos.large} alt=\"\"/>\r\n            <ProfileStatusWithHooks status={status} updateStatus={updateStatus}/>\r\n         </div>\r\n      </div>\r\n   );\r\n};","// extracted by mini-css-extract-plugin\nexport default {\"postsBlock\":\"MyPosts_postsBlock__M6bQg\",\"posts\":\"MyPosts_posts__mqw0J\"};","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Post_item__KiR7K\"};","import React from \"react\";\r\nimport classes from './Post.module.css'\r\n\r\ntype PostType = {\r\n    message: string\r\n    likesCount: number\r\n}\r\n\r\nconst Post = (props: PostType) => {\r\n    return (\r\n        <div className={classes.posts}>\r\n            <div className={classes.item}>\r\n                <img\r\n                    src=\"https://image.shutterstock.com/image-vector/fashion-silhouette-hipster-style-vector-260nw-161463836.jpg\"\r\n                    alt=\"\"/>\r\n                {props.message}\r\n                <div>\r\n                    <span>Like: {props.likesCount}</span>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport {Post};\r\n","import React from \"react\";\r\nimport classes from './MyPosts.module.css'\r\nimport {Post} from \"./Post/Post\";\r\nimport {PostsType} from \"../../../redux/profileReducer\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\";\r\nimport {TextArea} from \"../../common/FormsControls/FormsControls\";\r\n\r\ntype MyPostsType = {\r\n   posts: Array<PostsType>\r\n   addPost: (newPostText: string) => void\r\n}\r\n\r\nconst MyPosts = React.memo((props: MyPostsType) => {\r\n\r\n   const postsElements = [...props.posts]\r\n      .reverse()\r\n      .map(p => <Post key={p.id} message={p.message} likesCount={p.likesCount}/>)\r\n\r\n   const onAddPost = (values: any) => {\r\n      props.addPost(values.newPostText)\r\n   }\r\n\r\n   return (\r\n      <div className={classes.postsBlock}>\r\n         <h3>My posts</h3>\r\n         <AddNewPostFormRedux onSubmit={onAddPost}/>\r\n         <div className={classes.posts}>\r\n            {postsElements}\r\n         </div>\r\n      </div>\r\n   );\r\n})\r\n\r\ntype AddNewPostFormType = {\r\n   handleSubmit: any;\r\n}\r\n\r\nconst maxLength10 = maxLengthCreator(10)\r\n\r\nconst AddNewPostForm = (props: AddNewPostFormType) => {\r\n   return (\r\n      <form onSubmit={props.handleSubmit}>\r\n         <div>\r\n            <Field name='newPostText'\r\n                   component={TextArea}\r\n                   validate={[required, maxLength10]}\r\n                   placeholder={\"Post message\"}/>\r\n         </div>\r\n         <div>\r\n            <button>AddPost</button>\r\n         </div>\r\n      </form>\r\n   )\r\n\r\n}\r\n\r\nconst AddNewPostFormRedux = reduxForm({form: 'ProfileAddNewPostFrom'})(AddNewPostForm)\r\n\r\nexport {MyPosts};\r\n","import React from \"react\";\r\nimport {addPostAC, ProfilePageType} from \"../../../redux/profileReducer\";\r\nimport {MyPosts} from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\nimport {Dispatch} from \"redux\";\r\n\r\ntype mapStateToPropsType = {\r\n   profilePage: ProfilePageType\r\n}\r\n\r\nconst mapStateToProps = (state: mapStateToPropsType) => {\r\n   return {\r\n      posts: state.profilePage.posts,\r\n   }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch) => {\r\n   return {\r\n      addPost: (newPostText: string) => dispatch(addPostAC(newPostText)),\r\n   }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts)\r\n\r\nexport default MyPostsContainer\r\n","import React, {FC} from \"react\";\r\nimport classes from './Profile.module.css'\r\nimport {ProfilelInfo} from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\n\r\ntype ProfileType = {\r\n   profile: any\r\n   status: string\r\n   updateStatus: (status: string) => void\r\n}\r\n\r\nconst Profile: FC<ProfileType> = ({ ...props}) => {\r\n   return (\r\n      <div className={classes.content}>\r\n         <ProfilelInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus}/>\r\n         <MyPostsContainer />\r\n      </div>\r\n   );\r\n};\r\n\r\nexport {Profile};\r\n","import React, {ComponentType} from \"react\";\r\nimport {Profile} from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {getStatus, getUserProfileAC,  updateStatus} from \"../../redux/profileReducer\";\r\nimport { useParams} from \"react-router-dom\";\r\nimport { RootReducerType} from \"../../redux/redux-store\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nexport type MapStateToPropsType = {\r\n   profile: null\r\n   status: string\r\n   authorizedUserId: number | null\r\n   isAuth: boolean\r\n}\r\n\r\nexport type MapDispatchToPropsType = {\r\n   setUserProfileAC: (profile: any) => void\r\n   getUserProfileAC: (userId: number) => void\r\n   getStatus: (userId: number) => void\r\n   updateStatus: (status: string) => void\r\n   profile: null\r\n   router: any\r\n}\r\n\r\ntype PropsType = MapStateToPropsType & MapDispatchToPropsType\r\n\r\nclass ProfileContainer extends React.Component<PropsType, any> {\r\n   componentDidMount() {\r\n      let userId = this.props.router.userId || this.props.authorizedUserId\r\n      this.props.getUserProfileAC(userId)\r\n      this.props.getStatus(userId)\r\n   }\r\n\r\n   render() {\r\n     return (\r\n        <Profile {...this.props}\r\n                 profile={this.props.profile}\r\n                 status={this.props.status}\r\n                 updateStatus={this.props.updateStatus}\r\n        />\r\n     )\r\n   }\r\n}\r\n\r\nexport const withRouter = (WrappedComponent: typeof React.Component) => {\r\n   return (props: object) => {\r\n\r\n      const params = useParams(); //useParams возвращает объект пары key/value (ключ/значение) параметров URL.\r\n\r\n      return (\r\n         <WrappedComponent {...props} router={params}/>\r\n      );\r\n   }\r\n}\r\n\r\nlet mapStateToProps = (state: RootReducerType): MapStateToPropsType => ({\r\n   profile: state.profilePage.profile,\r\n   status: state.profilePage.status,\r\n   authorizedUserId: state.auth.userId,\r\n   isAuth: state.auth.isAuth\r\n})\r\n\r\nexport default compose<ComponentType>(\r\n   connect(mapStateToProps, {getUserProfileAC, getStatus, updateStatus}),\r\n   withRouter,\r\n   withAuthRedirect\r\n)(ProfileContainer)\r\n","import {Navigate} from \"react-router-dom\";\r\nimport React, {ComponentType} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {RootReducerType} from \"../redux/redux-store\";\r\n\r\ntype mapStateToPropsForRedirectType = {\r\n   isAuth: boolean\r\n}\r\n\r\nlet mapStateToPropsForRedirect = (state: RootReducerType): mapStateToPropsForRedirectType => ({\r\n   isAuth: state.auth.isAuth\r\n})\r\n\r\nexport function withAuthRedirect<T>(Component: ComponentType<T>) {\r\n\r\n   const  RedirectComponent = (props: mapStateToPropsForRedirectType) => {\r\n      let {isAuth,...restProps} = props\r\n      if (!isAuth) return <Navigate to={'/login'}/>\r\n      return <Component {...restProps as T}/>\r\n   }\r\n\r\n   let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n\r\n   return ConnectedAuthRedirectComponent;\r\n};"],"names":["ProfileStatusWithHooks","updateStatus","props","useState","editMode","setEditMode","status","setStatus","useEffect","className","classes","onDoubleClick","onBlur","autoFocus","onChange","e","currentTarget","value","ProfilelInfo","profile","src","photos","large","alt","Preloader","Post","message","likesCount","MyPosts","React","postsElements","posts","reverse","map","p","id","AddNewPostFormRedux","onSubmit","values","addPost","newPostText","maxLength10","maxLengthCreator","reduxForm","form","handleSubmit","Field","name","component","TextArea","validate","required","placeholder","connect","state","profilePage","dispatch","addPostAC","Profile","ProfileContainer","userId","this","router","authorizedUserId","getUserProfileAC","getStatus","withRouter","WrappedComponent","params","useParams","compose","auth","isAuth","withAuthRedirect","mapStateToPropsForRedirect","Component","restProps","to"],"sourceRoot":""}